{"remainingRequest":"/home/qc/Documents/Coding/vuetify-clinic-dashboard-/node_modules/babel-loader/lib/index.js!/home/qc/Documents/Coding/vuetify-clinic-dashboard-/node_modules/vuetify-loader/lib/loader.js!/home/qc/Documents/Coding/vuetify-clinic-dashboard-/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/qc/Documents/Coding/vuetify-clinic-dashboard-/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/qc/Documents/Coding/vuetify-clinic-dashboard-/src/views/Dashboard.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/qc/Documents/Coding/vuetify-clinic-dashboard-/src/views/Dashboard.vue","mtime":1581513381793},{"path":"/home/qc/Documents/Coding/vuetify-clinic-dashboard-/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/qc/Documents/Coding/vuetify-clinic-dashboard-/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/qc/Documents/Coding/vuetify-clinic-dashboard-/node_modules/vuetify-loader/lib/loader.js","mtime":1564062719000},{"path":"/home/qc/Documents/Coding/vuetify-clinic-dashboard-/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/qc/Documents/Coding/vuetify-clinic-dashboard-/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport TimeLine from \"../components/helper/TimeLine\";\nimport { dateToString, stringToDate } from \"../utils/handleDate\";\nexport default {\n  components: {\n    TimeLine: TimeLine\n  },\n  data: function data() {\n    return {\n      infocolor: ['#FFB677', '#436790'],\n      dailySalesChart: {\n        data: []\n      },\n      dataCompletedTasksChart: {\n        data: {\n          labels: ['12am', '3pm', '6pm', '9pm', '12pm', '3am', '6am', '9am'],\n          series: [[230, 750, 450, 300, 280, 240, 200, 190]]\n        },\n        options: {\n          lineSmooth: this.$chartist.Interpolation.cardinal({\n            tension: 0\n          }),\n          low: 0,\n          high: 1000,\n          // creative tim: we recommend you to set the high sa the biggest value + something for a better look\n          chartPadding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n          }\n        }\n      },\n      emailsSubscriptionChart: {\n        data: {\n          labels: ['Ja', 'Fe', 'Ma', 'Ap', 'Mai', 'Ju', 'Jul', 'Au', 'Se', 'Oc', 'No', 'De'],\n          series: [[542, 443, 320, 780, 553, 453, 326, 434, 568, 610, 756, 895]]\n        },\n        options: {\n          axisX: {\n            showGrid: false\n          },\n          low: 0,\n          high: 1000,\n          chartPadding: {\n            top: 0,\n            right: 5,\n            bottom: 0,\n            left: 0\n          }\n        },\n        responsiveOptions: [['screen and (max-width: 640px)', {\n          seriesBarDistance: 5,\n          axisX: {\n            labelInterpolationFnc: function labelInterpolationFnc(value) {\n              return value[0];\n            }\n          }\n        }]]\n      },\n      headers: [{\n        sortable: false,\n        text: 'ID',\n        value: 'id'\n      }, {\n        sortable: false,\n        text: 'Name',\n        value: 'name'\n      }, {\n        sortable: false,\n        text: 'Salary',\n        value: 'salary',\n        align: 'right'\n      }, {\n        sortable: false,\n        text: 'Country',\n        value: 'country',\n        align: 'right'\n      }, {\n        sortable: false,\n        text: 'City',\n        value: 'city',\n        align: 'right'\n      }],\n      items: [{\n        id: 1,\n        name: 'Dakota Rice',\n        country: 'Niger',\n        city: 'Oud-Tunrhout',\n        salary: '$35,738'\n      }, {\n        id: 2,\n        name: 'Minerva Hooper',\n        country: 'Curaçao',\n        city: 'Sinaai-Waas',\n        salary: '$23,738'\n      }, {\n        id: 3,\n        name: 'Sage Rodriguez',\n        country: 'Netherlands',\n        city: 'Overland Park',\n        salary: '$56,142'\n      }, {\n        id: 4,\n        name: 'Philip Chanley',\n        country: 'Korea, South',\n        city: 'Gloucester',\n        salary: '$38,735'\n      }, {\n        id: 5,\n        name: 'Doris Greene',\n        country: 'Malawi',\n        city: 'Feldkirchen in Kārnten',\n        salary: '$63,542'\n      }],\n      tabs: 0,\n      list: {\n        0: false,\n        1: false,\n        2: false\n      }\n    };\n  },\n  methods: {\n    complete: function complete(index) {\n      this.list[index] = !this.list[index];\n    },\n    loadMonth: function loadMonth() {\n      var _this = this;\n\n      var end = dateToString(new Date());\n      var start = dateToString(new Date(new Date().setDate(new Date().getDate() - 29)));\n      var last30daysIncome = [];\n      this.$http.get('/api/getLast30Days', {\n        params: {\n          dbs: this.$store.state.user.dbs_prefix + 'ordlist',\n          startDate: start,\n          endDate: end\n        }\n      }).then(function (response) {\n        _this.$nextTick(function () {\n          alert(JSON.stringify(response.data));\n          var index = 0;\n          var curDate = '';\n          var _iteratorNormalCompletion = true;\n          var _didIteratorError = false;\n          var _iteratorError = undefined;\n\n          try {\n            for (var _iterator = response.data[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n              var item = _step.value;\n\n              if (item.date != curDate) {\n                index = parseInt((new Date() - stringToDate(item.date)) / (1000 * 60 * 60 * 24));\n                curDate = item.date;\n                last30daysIncome[index] = item.total;\n              } else {\n                last30daysIncome[index] = parseFloat((last30daysIncome[index] + item.total).toFixed(2));\n              }\n            }\n          } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n              }\n            } finally {\n              if (_didIteratorError) {\n                throw _iteratorError;\n              }\n            }\n          }\n\n          for (var i = 0; i < 30; i++) {\n            _this.dailySalesChart.data.push([dateToString(new Date(new Date().setDate(new Date().getDate() - i))), last30daysIncome[i]]);\n          }\n        });\n      });\n    }\n  },\n  mounted: function mounted() {\n    this.loadMonth();\n  }\n};",{"version":3,"sources":["Dashboard.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-container fluid>\n    <v-row>\n      <v-col\n        cols=\"12\"\n        lg=\"4\"\n      >\n        <material-linechart-card\n          :data=\"dailySalesChart.data\"\n          color=\"green\"\n          :chartColor=\"['#FFB677', '#666']\"\n        >\n          <h5 class=\"title font-weight-light\">\n            Daily Sales\n          </h5>\n\n          <p class=\"category d-inline-flex font-weight-light\">\n            <v-icon\n              color=\"green\"\n              small\n            >\n              mdi-arrow-up\n            </v-icon>\n            <span class=\"green--text\">55%</span>&nbsp;\n            increase in today's sales\n          </p>\n\n          <template v-slot:actions>\n            <v-icon\n              class=\"mr-2\"\n              small\n            >\n              mdi-clock-outline\n            </v-icon>\n            <span class=\"caption grey--text font-weight-light\">updated 4 minutes ago</span>\n          </template>\n        </material-linechart-card>\n      </v-col>\n\n      <v-col\n        cols=\"12\"\n        lg=\"4\"\n      >\n        <material-chart-card\n          :data=\"emailsSubscriptionChart.data\"\n          :options=\"emailsSubscriptionChart.options\"\n          :responsive-options=\"emailsSubscriptionChart.responsiveOptions\"\n          color=\"red\"\n          type=\"Bar\"\n        >\n          <h4 class=\"title font-weight-light\">\n            Email Subscription\n          </h4>\n          <p class=\"category d-inline-flex font-weight-light\">\n            Last Campaign Performance\n          </p>\n\n          <template v-slot:actions>\n            <v-icon\n              class=\"mr-2\"\n              small\n            >\n              mdi-clock-outline\n            </v-icon>\n            <span class=\"caption grey--text font-weight-light\">updated 10 minutes ago</span>\n          </template>\n        </material-chart-card>\n      </v-col>\n\n      <v-col\n        cols=\"12\"\n        lg=\"4\"\n      >\n        <material-chart-card\n          :data=\"dataCompletedTasksChart.data\"\n          :options=\"dataCompletedTasksChart.options\"\n          color=\"green\"\n          type=\"Line\"\n        >\n          <h3 class=\"title font-weight-light\">\n            Completed Tasks\n          </h3>\n          <p class=\"category d-inline-flex font-weight-light\">\n            Last Last Campaign Performance\n          </p>\n\n          <template v-slot:actions>\n            <v-icon\n              class=\"mr-2\"\n              small\n            >\n              mdi-clock-outline\n            </v-icon>\n            <span class=\"caption grey--text font-weight-light\">campaign sent 26 minutes ago</span>\n          </template>\n        </material-chart-card>\n      </v-col>\n\n      <v-col\n        cols=\"12\"\n        sm=\"6\"\n        lg=\"3\"\n      >\n        <material-stats-card\n          color=\"green\"\n          icon=\"mdi-store\"\n          title=\"Revenue\"\n          value=\"$34,245\"\n          sub-icon=\"mdi-calendar\"\n          sub-text=\"Last 24 Hours\"\n        />\n      </v-col>\n\n      <v-col\n        cols=\"12\"\n        sm=\"6\"\n        lg=\"3\"\n      >\n        <material-stats-card\n          color=\"orange\"\n          icon=\"mdi-content-copy\"\n          title=\"Used Space\"\n          value=\"49/50\"\n          small-value=\"GB\"\n          sub-icon=\"mdi-alert\"\n          sub-icon-color=\"error\"\n          sub-text=\"Get More Space...\"\n          sub-text-color=\"text-primary\"\n        />\n      </v-col>\n\n      <v-col\n        cols=\"12\"\n        sm=\"6\"\n        lg=\"3\"\n      >\n        <material-stats-card\n          color=\"red\"\n          icon=\"mdi-information-outline\"\n          title=\"Fixed Issues\"\n          value=\"75\"\n          sub-icon=\"mdi-tag\"\n          sub-text=\"Tracked from Github\"\n        />\n      </v-col>\n\n      <v-col\n        cols=\"12\"\n        sm=\"6\"\n        lg=\"3\"\n      >\n        <material-stats-card\n          color=\"info\"\n          icon=\"mdi-twitter\"\n          title=\"Followers\"\n          value=\"+245\"\n          sub-icon=\"mdi-update\"\n          sub-text=\"Just Updated\"\n        />\n      </v-col>\n\n      <v-col\n        cols=\"12\"\n        lg=\"6\"\n      >\n        <material-card\n          color=\"orange\"\n          title=\"Employee Stats\"\n          text=\"New employees on 15th September, 2016\"\n        >\n          <v-data-table\n            :headers=\"headers\"\n            :items=\"items\"\n            hide-default-footer\n          />\n        </material-card>\n      </v-col>\n\n      <v-col\n        cols=\"12\"\n        lg=\"6\"\n      >\n        <material-card\n          class=\"card-tabs\"\n          color=\"green\"\n        >\n          <template v-slot:header>\n            <v-tabs\n              v-model=\"tabs\"\n              background-color=\"transparent\"\n              slider-color=\"white\"\n            >\n              <span\n                class=\"subheading font-weight-light mx-3\"\n                style=\"align-self: center\"\n              >Tasks:</span>\n              <v-tab class=\"mr-3\">\n                <v-icon class=\"mr-2\">\n                  mdi-bug\n                </v-icon>\n                Bugs\n              </v-tab>\n              <v-tab class=\"mr-3\">\n                <v-icon class=\"mr-2\">\n                  mdi-code-tags\n                </v-icon>\n                Website\n              </v-tab>\n              <v-tab>\n                <v-icon class=\"mr-2\">\n                  mdi-cloud\n                </v-icon>\n                Server\n              </v-tab>\n            </v-tabs>\n          </template>\n\n          <v-tabs-items v-model=\"tabs\">\n            <v-tab-item\n              v-for=\"n in 3\"\n              :key=\"n\"\n            >\n              <v-list\n                three-line\n                class=\"py-0\"\n              >\n                <v-list-item @click=\"complete(0)\">\n                  <v-list-item-action class=\"align-self-center\">\n                    <v-checkbox\n                      :value=\"list[0]\"\n                      color=\"green\"\n                    />\n                  </v-list-item-action>\n\n                  <v-list-item-title>\n                    Sign contract for \"What are conference organized afraid of?\"\n                  </v-list-item-title>\n\n                  <div class=\"d-flex\">\n                    <v-tooltip\n                      top\n                      content-class=\"top\"\n                    >\n                      <template v-slot:activator=\"{ attrs, on }\">\n                        <v-btn\n                          class=\"v-btn--simple\"\n                          color=\"green\"\n                          icon\n                          v-bind=\"attrs\"\n                          v-on=\"on\"\n                        >\n                          <v-icon color=\"primary\">\n                            mdi-pencil\n                          </v-icon>\n                        </v-btn>\n                      </template>\n                      <span>Edit</span>\n                    </v-tooltip>\n\n                    <v-tooltip\n                      top\n                      content-class=\"top\"\n                    >\n                      <template v-slot:activator=\"{ attrs, on }\">\n                        <v-btn\n                          class=\"v-btn--simple\"\n                          color=\"danger\"\n                          icon\n                          v-bind=\"attrs\"\n                          v-on=\"on\"\n                        >\n                          <v-icon color=\"error\">\n                            mdi-close\n                          </v-icon>\n                        </v-btn>\n                      </template>\n                      <span>Close</span>\n                    </v-tooltip>\n                  </div>\n                </v-list-item>\n\n                <v-divider />\n\n                <v-list-item @click=\"complete(1)\">\n                  <v-list-item-action class=\"align-self-center\">\n                    <v-checkbox\n                      :value=\"list[1]\"\n                      color=\"green\"\n                    />\n                  </v-list-item-action>\n\n                  <v-list-item-title>\n                    Lines From Great Russian Literature? Or E-mails From My Boss?\n                  </v-list-item-title>\n\n                  <div class=\"d-flex\">\n                    <v-tooltip\n                      top\n                      content-class=\"top\"\n                    >\n                      <template v-slot:activator=\"{ attrs, on }\">\n                        <v-btn\n                          class=\"v-btn--simple\"\n                          color=\"green\"\n                          icon\n                          v-bind=\"attrs\"\n                          v-on=\"on\"\n                        >\n                          <v-icon color=\"primary\">\n                            mdi-pencil\n                          </v-icon>\n                        </v-btn>\n                      </template>\n                      <span>Edit</span>\n                    </v-tooltip>\n\n                    <v-tooltip\n                      top\n                      content-class=\"top\"\n                    >\n                      <template v-slot:activator=\"{ attrs, on }\">\n                        <v-btn\n                          class=\"v-btn--simple\"\n                          color=\"danger\"\n                          icon\n                          v-bind=\"attrs\"\n                          v-on=\"on\"\n                        >\n                          <v-icon color=\"error\">\n                            mdi-close\n                          </v-icon>\n                        </v-btn>\n                      </template>\n                      <span>Close</span>\n                    </v-tooltip>\n                  </div>\n                </v-list-item>\n\n                <v-divider />\n\n                <v-list-item @click=\"complete(2)\">\n                  <v-list-item-action class=\"align-self-center\">\n                    <v-checkbox\n                      :value=\"list[2]\"\n                      color=\"green\"\n                    />\n                  </v-list-item-action>\n\n                  <v-list-item-title>\n                    Flooded: One year later, assessing what was lost and what was found when a ravaging rain swept through metro Detroit\n                  </v-list-item-title>\n\n                  <div class=\"d-flex\">\n                    <v-tooltip\n                      top\n                      content-class=\"top\"\n                    >\n                      <template v-slot:activator=\"{ attrs, on }\">\n                        <v-btn\n                          class=\"v-btn--simple\"\n                          color=\"green\"\n                          icon\n                          v-bind=\"attrs\"\n                          v-on=\"on\"\n                        >\n                          <v-icon color=\"primary\">\n                            mdi-pencil\n                          </v-icon>\n                        </v-btn>\n                      </template>\n                      <span>Edit</span>\n                    </v-tooltip>\n\n                    <v-tooltip\n                      top\n                      content-class=\"top\"\n                    >\n                      <template v-slot:activator=\"{ attrs, on }\">\n                        <v-btn\n                          class=\"v-btn--simple\"\n                          color=\"danger\"\n                          icon\n                          v-bind=\"attrs\"\n                          v-on=\"on\"\n                        >\n                          <v-icon color=\"error\">\n                            mdi-close\n                          </v-icon>\n                        </v-btn>\n                      </template>\n                      <span>Close</span>\n                    </v-tooltip>\n                  </div>\n                </v-list-item>\n              </v-list>\n            </v-tab-item>\n          </v-tabs-items>\n        </material-card>\n      </v-col>\n      <v-col\n        cols=\"12\"\n        lg=\"6\"\n      >\n        <TimeLine/>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script>\nimport TimeLine from '../components/helper/TimeLine'\nimport { dateToString, stringToDate} from '../utils/handleDate';\n  export default {\n    components: {TimeLine},\n    data () {\n      return {\n        infocolor: ['#FFB677', '#436790'],\n        dailySalesChart: {\n          data: [],\n        },\n        dataCompletedTasksChart: {\n          data: {\n            labels: ['12am', '3pm', '6pm', '9pm', '12pm', '3am', '6am', '9am'],\n            series: [\n              [230, 750, 450, 300, 280, 240, 200, 190]\n            ]\n          },\n          options: {\n            lineSmooth: this.$chartist.Interpolation.cardinal({\n              tension: 0\n            }),\n            low: 0,\n            high: 1000, // creative tim: we recommend you to set the high sa the biggest value + something for a better look\n            chartPadding: {\n              top: 0,\n              right: 0,\n              bottom: 0,\n              left: 0\n            }\n          }\n        },\n        emailsSubscriptionChart: {\n          data: {\n            labels: ['Ja', 'Fe', 'Ma', 'Ap', 'Mai', 'Ju', 'Jul', 'Au', 'Se', 'Oc', 'No', 'De'],\n            series: [\n              [542, 443, 320, 780, 553, 453, 326, 434, 568, 610, 756, 895]\n\n            ]\n          },\n          options: {\n            axisX: {\n              showGrid: false\n            },\n            low: 0,\n            high: 1000,\n            chartPadding: {\n              top: 0,\n              right: 5,\n              bottom: 0,\n              left: 0\n            }\n          },\n          responsiveOptions: [\n            ['screen and (max-width: 640px)', {\n              seriesBarDistance: 5,\n              axisX: {\n                labelInterpolationFnc: function (value) {\n                  return value[0]\n                }\n              }\n            }]\n          ]\n        },\n        headers: [\n          {\n            sortable: false,\n            text: 'ID',\n            value: 'id'\n          },\n          {\n            sortable: false,\n            text: 'Name',\n            value: 'name'\n          },\n          {\n            sortable: false,\n            text: 'Salary',\n            value: 'salary',\n            align: 'right'\n          },\n          {\n            sortable: false,\n            text: 'Country',\n            value: 'country',\n            align: 'right'\n          },\n          {\n            sortable: false,\n            text: 'City',\n            value: 'city',\n            align: 'right'\n          }\n        ],\n        items: [\n          {\n            id: 1,\n            name: 'Dakota Rice',\n            country: 'Niger',\n            city: 'Oud-Tunrhout',\n            salary: '$35,738'\n          },\n          {\n            id: 2,\n            name: 'Minerva Hooper',\n            country: 'Curaçao',\n            city: 'Sinaai-Waas',\n            salary: '$23,738'\n          },\n          {\n            id: 3,\n            name: 'Sage Rodriguez',\n            country: 'Netherlands',\n            city: 'Overland Park',\n            salary: '$56,142'\n          },\n          {\n            id: 4,\n            name: 'Philip Chanley',\n            country: 'Korea, South',\n            city: 'Gloucester',\n            salary: '$38,735'\n          },\n          {\n            id: 5,\n            name: 'Doris Greene',\n            country: 'Malawi',\n            city: 'Feldkirchen in Kārnten',\n            salary: '$63,542'\n          }\n        ],\n        tabs: 0,\n        list: {\n          0: false,\n          1: false,\n          2: false\n        }\n      }\n    },\n    methods: {\n      complete (index) {\n        this.list[index] = !this.list[index]\n      },\n\n      loadMonth: function(){\n        var end = dateToString(new Date());\n        var start = dateToString(new Date(new Date().setDate(new Date().getDate()-29)));\n        var last30daysIncome = [];\n        this.$http.get('/api/getLast30Days', {\n          params: {\n            dbs : this.$store.state.user.dbs_prefix+'ordlist',\n            startDate: start,\n            endDate: end\n          }\n        }).then(response => {\n          this.$nextTick( () => {\n            alert(JSON.stringify(response.data));\n            let index = 0;\n            let curDate = '';            \n            for(let item of response.data){\n              if(item.date != curDate){\n                index = parseInt((new Date() - stringToDate(item.date)) / (1000 * 60 * 60 * 24));\n                curDate = item.date;\n                last30daysIncome[index] = item.total;\n              }\n              else{\n                last30daysIncome[index] = parseFloat((last30daysIncome[index] + item.total).toFixed(2));\n              }\n            }\n            for(var i = 0;i<30;i++) {\n              this.dailySalesChart.data.push([dateToString(new Date(new Date().setDate(new Date().getDate()-i))),last30daysIncome[i]]);\n            }\n          })\n        })\n      }\n    },\n\n    mounted: function() {\n\t\t\tthis.loadMonth();\n\t\t}\n  }\n</script>\n"],"sourceRoot":"src/views"}]}