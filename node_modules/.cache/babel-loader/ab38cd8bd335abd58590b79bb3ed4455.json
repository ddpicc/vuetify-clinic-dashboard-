{"remainingRequest":"/home/qc/Documents/vuetify-clinic-dashboard-/node_modules/babel-loader/lib/index.js!/home/qc/Documents/vuetify-clinic-dashboard-/node_modules/eslint-loader/index.js??ref--13-0!/home/qc/Documents/vuetify-clinic-dashboard-/src/store/modules/permission/actions.js","dependencies":[{"path":"/home/qc/Documents/vuetify-clinic-dashboard-/src/store/modules/permission/actions.js","mtime":1581225491753},{"path":"/home/qc/Documents/vuetify-clinic-dashboard-/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/qc/Documents/vuetify-clinic-dashboard-/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/qc/Documents/vuetify-clinic-dashboard-/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.filter\";\nimport \"core-js/modules/es6.array.index-of\";\nimport \"core-js/modules/es6.array.some\";\nimport { asyncRouterMap, constantRouterMap } from \"../../../router/index\";\n\nfunction hasPermission(roles, route) {\n  if (route.meta && route.meta.role) {\n    return roles.some(function (role) {\n      return route.meta.role.indexOf(role) >= 0;\n    });\n  } else {\n    return true;\n  }\n}\n/**\n * 递归过滤异步路由表，返回符合用户角色权限的路由表\n * @param asyncRouterMap\n * @param roles\n */\n\n\nfunction filterAsyncRouter(asyncRouterMap, roles) {\n  var accessedRouters = asyncRouterMap.filter(function (route) {\n    if (hasPermission(roles, route)) {\n      if (route.children && route.children.length) {\n        route.children = filterAsyncRouter(route.children, roles);\n      }\n\n      return true;\n    }\n\n    return false;\n  });\n  return accessedRouters;\n}\n\nexport default {\n  GenerateRoutes: function GenerateRoutes(_ref, data) {\n    var commit = _ref.commit;\n    return new Promise(function (resolve) {\n      var roles = data.roles;\n      var accessedRouters;\n\n      if (roles.indexOf('admin') >= 0) {\n        accessedRouters = asyncRouterMap;\n      } else {\n        accessedRouters = filterAsyncRouter(asyncRouterMap, roles);\n      }\n\n      commit('SET_ROUTERS', accessedRouters);\n      resolve();\n    });\n  }\n};",{"version":3,"sources":["/home/qc/Documents/vuetify-clinic-dashboard-/src/store/modules/permission/actions.js"],"names":["asyncRouterMap","constantRouterMap","hasPermission","roles","route","meta","role","some","indexOf","filterAsyncRouter","accessedRouters","filter","children","length","GenerateRoutes","data","commit","Promise","resolve"],"mappings":";;;AAAA,SAASA,cAAT,EAAyBC,iBAAzB;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8BC,KAA9B,EAAqC;AACjC,MAAIA,KAAK,CAACC,IAAN,IAAcD,KAAK,CAACC,IAAN,CAAWC,IAA7B,EAAmC;AACjC,WAAOH,KAAK,CAACI,IAAN,CAAW,UAAAD,IAAI;AAAA,aAAIF,KAAK,CAACC,IAAN,CAAWC,IAAX,CAAgBE,OAAhB,CAAwBF,IAAxB,KAAiC,CAArC;AAAA,KAAf,CAAP;AACD,GAFD,MAEO;AACL,WAAO,IAAP;AACD;AACF;AAED;;;;;;;AAKA,SAASG,iBAAT,CAA2BT,cAA3B,EAA2CG,KAA3C,EAAkD;AAChD,MAAMO,eAAe,GAAGV,cAAc,CAACW,MAAf,CAAsB,UAAAP,KAAK,EAAI;AACrD,QAAIF,aAAa,CAACC,KAAD,EAAQC,KAAR,CAAjB,EAAiC;AAE/B,UAAIA,KAAK,CAACQ,QAAN,IAAkBR,KAAK,CAACQ,QAAN,CAAeC,MAArC,EAA6C;AAC3CT,QAAAA,KAAK,CAACQ,QAAN,GAAiBH,iBAAiB,CAACL,KAAK,CAACQ,QAAP,EAAiBT,KAAjB,CAAlC;AACD;;AACD,aAAO,IAAP;AACD;;AACD,WAAO,KAAP;AACD,GATuB,CAAxB;AAUA,SAAOO,eAAP;AACD;;AAEH,eAAe;AACbI,EAAAA,cADa,gCACcC,IADd,EACoB;AAAA,QAAhBC,MAAgB,QAAhBA,MAAgB;AAC7B,WAAO,IAAIC,OAAJ,CAAY,UAAAC,OAAO,EAAI;AAAA,UACpBf,KADoB,GACVY,IADU,CACpBZ,KADoB;AAE5B,UAAIO,eAAJ;;AACA,UAAIP,KAAK,CAACK,OAAN,CAAc,OAAd,KAA0B,CAA9B,EAAiC;AAC/BE,QAAAA,eAAe,GAAGV,cAAlB;AACD,OAFD,MAEO;AACLU,QAAAA,eAAe,GAAGD,iBAAiB,CAACT,cAAD,EAAiBG,KAAjB,CAAnC;AACD;;AAGDa,MAAAA,MAAM,CAAC,aAAD,EAAgBN,eAAhB,CAAN;AACAQ,MAAAA,OAAO;AACR,KAZM,CAAP;AAaD;AAfU,CAAf","sourcesContent":["import { asyncRouterMap, constantRouterMap } from '../../../router/index';\n\nfunction hasPermission(roles, route) {\n    if (route.meta && route.meta.role) {\n      return roles.some(role => route.meta.role.indexOf(role) >= 0)\n    } else {\n      return true;\n    }\n  }\n  \n  /**\n   * 递归过滤异步路由表，返回符合用户角色权限的路由表\n   * @param asyncRouterMap\n   * @param roles\n   */\n  function filterAsyncRouter(asyncRouterMap, roles) {\n    const accessedRouters = asyncRouterMap.filter(route => {\n      if (hasPermission(roles, route)) {\n  \n        if (route.children && route.children.length) {\n          route.children = filterAsyncRouter(route.children, roles);\n        }\n        return true;\n      }\n      return false;\n    })\n    return accessedRouters\n  }\n\nexport default {\n  GenerateRoutes({ commit }, data) {\n      return new Promise(resolve => {\n        const { roles } = data;\n        let accessedRouters;\n        if (roles.indexOf('admin') >= 0) {\n          accessedRouters = asyncRouterMap;\n        } else {\n          accessedRouters = filterAsyncRouter(asyncRouterMap, roles)\n        }\n\n\n        commit('SET_ROUTERS', accessedRouters);\n        resolve();\n      })\n    },\n \n}"]}]}