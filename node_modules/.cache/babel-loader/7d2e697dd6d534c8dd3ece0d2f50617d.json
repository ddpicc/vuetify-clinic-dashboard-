{"remainingRequest":"/home/qc/Documents/vuetify-clinic-dashboard-/node_modules/babel-loader/lib/index.js!/home/qc/Documents/vuetify-clinic-dashboard-/node_modules/vuetify-loader/lib/loader.js!/home/qc/Documents/vuetify-clinic-dashboard-/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/qc/Documents/vuetify-clinic-dashboard-/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/qc/Documents/vuetify-clinic-dashboard-/src/views/CreateOrd.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/qc/Documents/vuetify-clinic-dashboard-/src/views/CreateOrd.vue","mtime":1581513381793},{"path":"/home/qc/Documents/vuetify-clinic-dashboard-/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/qc/Documents/vuetify-clinic-dashboard-/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/qc/Documents/vuetify-clinic-dashboard-/node_modules/vuetify-loader/lib/loader.js","mtime":1564062719000},{"path":"/home/qc/Documents/vuetify-clinic-dashboard-/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/qc/Documents/vuetify-clinic-dashboard-/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.date.to-string\";\nimport \"core-js/modules/es6.array.index-of\";\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar pinyin = require(\"pinyin\");\n\nvar staticHeader = [{\n  sortable: false,\n  text: '名称',\n  value: 'name1',\n  width: '15%'\n}, {\n  sortable: false,\n  text: '数量',\n  value: 'count1',\n  width: '10%'\n}, {\n  sortable: false,\n  text: '名称',\n  value: 'name2',\n  width: '15%'\n}, {\n  sortable: false,\n  text: '数量',\n  value: 'count2',\n  width: '10%'\n}, {\n  sortable: false,\n  text: '名称',\n  value: 'name3',\n  width: '15%'\n}, {\n  sortable: false,\n  text: '数量',\n  value: 'count3',\n  width: '10%'\n}, {\n  sortable: false,\n  text: '名称',\n  value: 'name4',\n  width: '15%'\n}, {\n  sortable: false,\n  text: '数量',\n  value: 'count4',\n  width: '10%'\n}];\nvar xiyaoHeader = [{\n  sortable: false,\n  text: '名称',\n  value: 'name1'\n}, {\n  sortable: false,\n  text: '数量',\n  value: 'count1'\n}, {\n  sortable: false,\n  text: '用法',\n  value: 'usage1'\n}];\nexport default {\n  data: function data() {\n    return {\n      direction: 'bottom',\n      fab: false,\n      searchStr: '',\n      transition: 'slide-y-reverse-transition',\n      sexItems: ['男', '女'],\n      patientName: '',\n      patientAge: '',\n      patientSex: '',\n      patientPhone: '',\n      patientSymptom: '',\n      perOrdTotal: 0,\n      perOrdBase: 0,\n      orderComment: '',\n      orderCount: '',\n      total: '',\n      howToUseOn: false,\n      hotToUse: ['一天一次', '一天三次'],\n      medRadio: '草药',\n      cardColor: 'green',\n      components: [],\n      headers: staticHeader,\n      items: [],\n      cacheMedData: [],\n      orderMed1PerObj: [],\n      inputMed: '',\n      inputDose: '',\n      medString: '',\n      selectPatientDialog: false,\n      notzero: function notzero(v) {\n        return v > 0 || '不能是0';\n      }\n    };\n  },\n  methods: {\n    //搜索\n    filterText: function filterText(value, search, item) {\n      return value != null && search != null && typeof value === 'string' && value.toString().indexOf(search) !== -1;\n    },\n    //得到焦点的时候高亮文字\n    focus: function focus(event) {\n      event.currentTarget.select();\n    },\n    // 根据类型获取药品数据\n    getAll: function getAll() {\n      var _this = this;\n\n      this.loading = true;\n      this.$http.get('/api/getAllMedbyType', {\n        params: {\n          dbs: this.$store.state.user.dbs_prefix + 'medlist',\n          medtype: this.medRadio\n        }\n      }).then(function (res) {\n        _this.cacheMedData = res.data;\n        _this.loading = false;\n      });\n    },\n    radioChanged: function radioChanged() {\n      this.getAll();\n\n      if (this.medRadio == \"西药\") {\n        this.howToUseOn = true;\n        this.cardColor = 'blue lighten-2';\n        this.headers = xiyaoHeader;\n      } else {\n        this.howToUseOn = false;\n        this.headers = staticHeader;\n        if (this.medRadio == \"免煎\") this.cardColor = 'lime darken-2';else this.cardColor = 'green';\n      }\n    },\n    getColor: function getColor(count) {\n      if (parseInt(count) === 1 && this.medRadio == \"草药\") return 'orange';\n    },\n    searchChanged: function searchChanged(queryText) {\n      if (!queryText) {//alert(queryText);\n        //this.components = [{\"medname\":\"empty\"}];\n        //return;\n      } else if (queryText.length >= 2) {\n        if (this.components.length == 0) {\n          this.components = this.cacheMedData;\n        }\n      } else {\n        this.components = [];\n      }\n    },\n    customFilter: function customFilter(item, queryText, itemText) {\n      var hasValue = function hasValue(val) {\n        return val != null ? val : '';\n      };\n\n      var query = hasValue(queryText);\n      if (queryText.length < 2) return false;\n      var textOne = item.alias.toString().toLowerCase();\n      return textOne.indexOf(query.toString().toLowerCase()) > -1;\n    },\n    moveFocusToDose: function moveFocusToDose() {\n      var searchStr = this.inputMed;\n\n      if (searchStr === \"\") {\n        alert(\"不能为空\");\n        return;\n      } //check if already exist in table\n\n\n      var existInTable = this.orderMed1PerObj.find(function (p) {\n        return p.name === searchStr;\n      });\n\n      if (typeof existInTable != \"undefined\") {\n        alert(\"不能重复添加药品\");\n        return;\n      }\n\n      this.$refs.mark2.$el.querySelector('input').focus();\n    },\n    //medString = [{\"name\":\"xx\",\"count\":\"xx\"},{\"name\":\"xx\",\"count\":\"xx\"}....]\n    disPlayToTb: function disPlayToTb() {\n      //this.orderMed1PerObj = JSON.parse(this.medString);\n      this.items = [];\n      var medStringTmepArray = [];\n      var emptyStr = \"{\";\n      var carry = 4;\n      if (this.medRadio == \"西药\") carry = 2;\n\n      for (var i = 0; i < this.orderMed1PerObj.length; i++) {\n        var tempStrName = \"name\" + (i % carry + 1);\n        var tempStrNumber = 'count' + (i % carry + 1);\n        var tempStrMedComment = 'medComment' + (i % carry + 1);\n        if (this.medRadio == \"草药\") emptyStr = emptyStr + '\"' + tempStrName + '\":\"' + this.orderMed1PerObj[i].name + '\",\"' + tempStrNumber + '\":\"' + parseInt(this.orderMed1PerObj[i].count) + this.orderMed1PerObj[i].spec + '\",';else if (this.medRadio == \"免煎\") emptyStr = emptyStr + '\"' + tempStrName + '\":\"' + this.orderMed1PerObj[i].name + '\",\"' + tempStrNumber + '\":\"' + this.orderMed1PerObj[i].count + this.orderMed1PerObj[i].spec + '\",';else if (this.medRadio == \"西药\") emptyStr = emptyStr + '\"' + tempStrName + '\":\"' + this.orderMed1PerObj[i].name + '\",\"' + tempStrNumber + '\":\"' + parseInt(this.orderMed1PerObj[i].count) + '盒\",\"' + tempStrMedComment + '\":\"' + this.orderMed1PerObj[i].medComment + '\",';\n\n        if (i > 0 && (i + 1) % carry == 0) {\n          emptyStr = emptyStr.substr(0, emptyStr.length - 1);\n          emptyStr = emptyStr + '}';\n          var tempObj = JSON.parse(emptyStr);\n          medStringTmepArray.push(emptyStr);\n          this.items.push(tempObj);\n          emptyStr = \"{\";\n        }\n      }\n\n      if (i % carry != 0) {\n        emptyStr = emptyStr.substr(0, emptyStr.length - 1);\n        emptyStr = emptyStr + '}';\n        medStringTmepArray.push(emptyStr);\n\n        var _tempObj = JSON.parse(emptyStr);\n\n        this.items.push(_tempObj);\n      }\n\n      this.medString = medStringTmepArray.join(\";\");\n    },\n    postToTb: function postToTb() {\n      var searchStr = this.inputMed;\n\n      if (searchStr === \"\") {\n        alert(\"不能为空\");\n        this.$refs.mark1.$el.querySelector('input').focus();\n        return;\n      }\n\n      if (this.inputDose === \"\" || this.inputDose === \"0\") {\n        alert(\"药品数量不能为空\");\n        this.$refs.mark.$el.querySelector('input').focus();\n        return;\n      }\n\n      var existInDb = this.cacheMedData.find(function (p) {\n        return p.medname === searchStr;\n      }); //check if already exist in table\n\n      var existInTable = this.orderMed1PerObj.find(function (p) {\n        return p.name === searchStr;\n      });\n\n      if (typeof existInTable != \"undefined\") {\n        alert(\"不能重复添加药品\");\n        this.$refs.mark1.$el.querySelector('input').focus();\n        return;\n      }\n\n      this.orderMed1PerObj.push({\n        name: this.inputMed,\n        count: this.inputDose,\n        spec: existInDb.spec,\n        baseprice: existInDb.baseprice,\n        sellprice: existInDb.sellprice\n      });\n      this.disPlayToTb();\n      if (this.orderCount === '') this.orderCount = 1;\n      this.inputDose = 1;\n      this.inputMed = '';\n      this.$refs.mark1.$el.querySelector('input').focus();\n    },\n    //获取当前时间，格式YYYY-MM-DD\n    getNowFormatDate: function getNowFormatDate() {\n      var date = new Date();\n      var seperator1 = \"/\";\n      var year = date.getFullYear(); //年\n\n      var month = date.getMonth() + 1; //月\n\n      var strDate = date.getDate(); //日\n\n      if (month >= 1 && month <= 9) {\n        month = \"0\" + month;\n      }\n\n      if (strDate >= 0 && strDate <= 9) {\n        strDate = \"0\" + strDate;\n      }\n\n      var currentdate = year + seperator1 + month + seperator1 + strDate;\n      return currentdate;\n    },\n    postOrdToDbSure: function postOrdToDbSure() {\n      var _this2 = this;\n\n      if (this.items.length == 0) {\n        alert('订单为空');\n        return;\n      }\n\n      if (this.patientName == '') {\n        alert('姓名不能为空');\n        return;\n      }\n\n      this.$http.post('/api/insertPatientOrderPage', {\n        //搜索全拼相同，在得到的结果中找至少有一个字相同的名字,找到了就列出来，没找到就创建一个新的病人\n        dbs: this.$store.state.user.dbs_prefix + 'patient',\n        name: this.patientName,\n        name_pinyin: pinyin(this.patientName, {\n          style: pinyin.STYLE_NORMAL\n        }).join(\"\"),\n        sex: this.patientSex,\n        age: !this.patientAge ? 0 : parseFloat(this.patientAge),\n        phone: !this.patientPhone ? 0 : parseInt(this.patientPhone),\n        lastVisit: this.getNowFormatDate()\n      }).then(function (res) {\n        _this2.$http.post('/api/insertOrd', {\n          dbs: _this2.$store.state.user.dbs_prefix + 'ordlist',\n          patient: _this2.patientName,\n          patient_id: res.data.insertId,\n          patient_sex: _this2.patientSex,\n          patient_age: _this2.patientAge,\n          patient_phone: _this2.patientPhone,\n          symptom: _this2.patientSymptom,\n          order_comment: _this2.orderComment,\n          medtype: _this2.medRadio,\n          dose: _this2.orderCount,\n          medarray: _this2.medString,\n          total: parseFloat(_this2.total),\n          date: _this2.getNowFormatDate()\n        }).then(function (resord) {\n          _this2.clearInfo();\n        }).catch(function (err) {\n          console.log(err);\n        });\n      }).catch(function (err) {\n        console.log(err);\n      });\n    },\n    clearInfo: function clearInfo() {\n      this.patientName = '';\n      this.patientSex = '';\n      this.patientAge = '';\n      this.patientPhone = '';\n      this.patientSymptom = '';\n      this.orderComment = '';\n      this.medRadio = '草药';\n      this.orderCount = '';\n      this.items = [];\n      this.total = '';\n      this.perOrdTotal = 0;\n      this.perOrdBase = 0;\n      this.inputDose = '';\n    },\n    save: function save(count, name) {\n      var existInTable = this.orderMed1PerObj.find(function (p) {\n        return p.name === name;\n      });\n      var index = this.orderMed1PerObj.indexOf(existInTable);\n\n      if (!count || !parseInt(count) || parseInt(count) == 0) {\n        this.orderMed1PerObj.splice(index, 1);\n        this.disPlayToTb();\n      } else {\n        //splice can activate watch\n        this.orderMed1PerObj.splice(index, 1, {\n          name: name,\n          count: parseInt(count),\n          spec: existInTable.spec,\n          baseprice: existInTable.baseprice,\n          sellprice: existInTable.sellprice\n        });\n        this.disPlayToTb();\n      }\n    },\n    cancel: function cancel() {},\n    deleteMed: function deleteMed(_deleteMed) {\n      var existInTable = this.orderMed1PerObj.find(function (p) {\n        return p.name === _deleteMed;\n      });\n      var index = this.orderMed1PerObj.indexOf(existInTable);\n      this.orderMed1PerObj.splice(index, 1);\n      this.disPlayToTb();\n    },\n    nameLostFoucs: function nameLostFoucs() {\n      if (this.patientName == '') return;\n      var p_name_pinyin = pinyin(this.patientName, {\n        style: pinyin.STYLE_NORMAL\n      }).join(\"\");\n      this.$http.get('/api/findPatientByPinyin', {\n        params: {\n          dbs: this.$store.state.user.dbs_prefix + 'patient',\n          name_pinyin: '%' + p_name_pinyin + '%'\n        }\n      }).then(function (res) {\n        alert(JSON.stringify(res.data));\n      }); //this.selectPatientDialog = true;\n      //to do \n      //check if the patient exist\n    }\n  },\n  watch: {\n    orderMed1PerObj: function orderMed1PerObj() {\n      this.perOrdBase = 0;\n      this.perOrdTotal = 0;\n      if (this.orderMed1PerObj.length === 0) this.orderCount = '';\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.orderMed1PerObj[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var item = _step.value;\n          var basePriceOfMed = item.baseprice;\n          var sellPriceOfMed = item.sellprice;\n          var medDose = parseInt(item.count);\n          this.perOrdBase = parseFloat((this.perOrdBase + parseFloat((basePriceOfMed * medDose).toFixed(2))).toFixed(2));\n          this.perOrdTotal = parseFloat((this.perOrdTotal + parseFloat((sellPriceOfMed * medDose).toFixed(2))).toFixed(2));\n          var temp = (this.perOrdTotal * this.orderCount).toFixed(2);\n          this.total = temp;\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    },\n    orderCount: function orderCount(val) {\n      if (val != '') {\n        this.orderCount = val;\n      }\n\n      var temp = (this.perOrdTotal * this.orderCount).toFixed(2);\n      this.total = temp;\n    }\n  },\n  mounted: function mounted() {\n    this.getAll();\n  }\n};",{"version":3,"sources":["CreateOrd.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-container\n    fill-height\n    fluid\n    grid-list-xl\n  >\n    <v-row align=\"center\">\n      <v-col cols=\"12\" >\n        <material-card flat full-width :color=cardColor>\n          <template v-slot:header>\n            <v-row align=\"center\">\n              <v-col sm=\"4\" md=\"3\">\n                <div class=\"px-3\">\n                  <div class=\"title font-weight-light mb-2\">\n                    <v-radio-group v-model=\"medRadio\" :mandatory=\"false\" row @change=\"radioChanged\">\n                      <v-radio label=\"草药\" value=\"草药\" color=\"grey darken-1\"></v-radio>\n                      <v-radio label=\"免煎\" value=\"免煎\" color=\"grey darken-1\"></v-radio>\n                      <v-radio label=\"西药\" value=\"西药\" color=\"grey darken-1\"></v-radio>\n                    </v-radio-group>\n                  </div>\n                </div>\n              </v-col>\n              <v-col cols=\"1\"></v-col>\n              <v-divider\n                class=\"mx-2\"\n                vertical\n              ></v-divider>\n              <v-col>\n                <v-container>\n                  <v-row dense>\n                    <v-col sm=\"4\" md=\"3\">\n                      <v-text-field v-model=\"patientName\" @blur=\"nameLostFoucs\"\n                        label=\"姓名\"\n                      ></v-text-field>\n                    </v-col>\n                    <v-col sm=\"4\" md=\"3\">\n                      <v-select v-model=\"patientSex\"\n                        :items=\"sexItems\"\n                        label=\"性别\"\n                      ></v-select>\n                    </v-col>\n                    <v-col sm=\"3\" md=\"3\">\n                      <v-text-field v-model=\"patientAge\"\n                        label=\"年龄\"\n                      ></v-text-field>\n                    </v-col>\n                    <v-col cols=\"1.5\"></v-col>\n                    <v-col sm=\"1.5\" md=\"1.5\"\n                    align=\"right\">\n                      <v-btn\n                        absolute\n                        dark\n                        fab\n                        top\n                        right\n                        color=\"amber\"\n                        @click=\"postOrdToDbSure\"\n                      >\n                        <v-icon>mdi-plus</v-icon>\n                      </v-btn>\n                    </v-col>\n                  </v-row>\n                  <v-row \n                  dense\n                  >\n                    <v-col sm=\"4\" md=\"4\">\n                      <v-text-field v-model=\"patientPhone\"\n                        label=\"电话\"\n                      ></v-text-field>\n                    </v-col>\n                    <v-col sm=\"5\" md=\"5\">\n                      <v-text-field v-model=\"patientSymptom\"\n                        label=\"症状\"\n                      ></v-text-field>\n                    </v-col>\n                    <v-col cols=\"1\"><v-icon>mdi-account-card-details</v-icon></v-col>\n                  </v-row>\n                </v-container>\n              </v-col>\n            </v-row>           \n          </template>\n          <v-data-table\n            :headers=\"headers\"\n            :items=\"items\"\n            item-key=\"name\"\n            :search=\"searchStr\"\n            :custom-filter=\"filterText\"\n            hide-default-footer\n          >\n          <template v-slot:top>\n            <v-row \n            dense\n            >\n              <v-col sm=\"6\" md=\"6\">\n                <v-autocomplete\n                  label=\"药品\"\n                  :items=\"components\"\n                  :filter=\"customFilter\"\n                  dense\n                  clearable\n                  ref=\"mark1\"\n                  @keyup.enter.native=\"moveFocusToDose\"\n                  @update:search-input=\"searchChanged\"\n                  item-text=\"medname\"\n                  item-value=\"medname\"\n                  v-model=\"inputMed\"\n                  @focus=\"focus($event)\"\n                >\n                <template v-slot:item=\"data\">\n                  <template>\n                    <v-list-item-content>\n                      <v-list-item-title>{{data.item.medname}}&nbsp;&nbsp;&nbsp;&nbsp;{{data.item.alias}}</v-list-item-title>\n                      <v-list-item-subtitle>\n                        价钱：{{data.item.sellprice}}&nbsp;&nbsp;&nbsp;&nbsp;库存：{{data.item.inventoryNm}}&nbsp;&nbsp;&nbsp;&nbsp;规格：{{data.item.spec}}\n                      </v-list-item-subtitle>\n                    </v-list-item-content>\n                  </template>\n                </template>\n                </v-autocomplete>\n              </v-col>\n              <v-col v-if=\"!howToUseOn\" sm=\"6\" md=\"6\">\n                <v-text-field\n                  v-model=\"inputDose\"\n                  label=\"剂量\"\n                  dense\n                  ref=\"mark2\"\n                  @keyup.enter.native=\"postToTb\"\n                  @focus=\"focus($event)\"\n                ></v-text-field>\n              </v-col>\n              <v-col v-if=\"howToUseOn\" sm=\"3\" md=\"3\">\n                <v-text-field\n                  v-model=\"inputDose\"\n                  label=\"剂量\"\n                  dense\n                  ref=\"mark2\"\n                  @focus=\"focus($event)\"\n                ></v-text-field>\n              </v-col>\n              <v-col v-if=\"howToUseOn\" sm=\"3\" md=\"3\">\n                <v-select\n                  v-if=\"howToUseOn\"\n                  :items=\"hotToUse\"\n                  dense\n                  clearable\n                  ref=\"mark3\"\n                  label=\"用法用量\"\n                ></v-select>\n              </v-col>\n            </v-row>\n          </template>\n          <template v-slot:item.count1=\"props\">\n            <v-edit-dialog\n              :return-value.sync=\"props.item.count1\"\n              large\n              persistent\n              @save=\"save(props.item.count1, props.item.name1)\"\n              @cancel=\"cancel\"\n            >\n              <div>{{ props.item.count1 }}</div>\n              <template v-slot:input>\n                <v-text-field\n                  v-model=\"props.item.count1\"\n                  :rules=\"[notzero]\"\n                  label=\"Edit\"\n                  single-line\n                ></v-text-field>\n              </template>\n            </v-edit-dialog>\n          </template>\n          <template v-slot:body.append=\"{ headers }\">\n            <tr>\n              <td :colspan=\"headers.length-2\">\n              </td>\n              <td :colspan=\"2\" align=\"right\">\n                每付价钱: {{perOrdTotal}}元\n              </td>\n            </tr>\n          </template>\n          <template v-slot:item.name1=\"{ item }\">\n            <v-chip v-if=\"item.name1\" :color=\"getColor(item.count1)\" outlined close @click:close=\"deleteMed(item.name1)\">{{ item.name1 }}</v-chip>\n          </template>\n          <template v-slot:item.name2=\"{ item }\">\n            <v-chip v-if=\"item.name2\" :color=\"getColor(item.count2)\" close outlined @click:close=\"deleteMed(item.name2)\">{{ item.name2 }}</v-chip>\n          </template>\n          <template v-slot:item.name3=\"{ item }\">\n            <v-chip v-if=\"item.name3\" :color=\"getColor(item.count3)\" close outlined @click:close=\"deleteMed(item.name3)\">{{ item.name3 }}</v-chip>\n          </template>\n          <template v-slot:item.name4=\"{ item }\">\n            <v-chip v-if=\"item.name4\" :color=\"getColor(item.count4)\" close outlined @click:close=\"deleteMed(item.name4)\">{{ item.name4 }}</v-chip>\n          </template>\n          </v-data-table>\n          <div class=\"text-center pt-2\">\n            <v-row>\n              <v-col sm=\"5\" md=\"6\"></v-col>\n              <v-col sm=\"5\" md=\"4\">\n                <v-text-field dense v-model=\"orderComment\"\n                  label=\"处方备注\" placeholder=\"备注\"\n                ></v-text-field>\n              </v-col>\n              <v-col sm=\"1\" md=\"1\">\n                <v-text-field dense v-model=\"orderCount\"\n                  label=\"几付\" suffix=\"付\" placeholder=\" \"\n                ></v-text-field>\n              </v-col>\n              <v-col sm=\"1\" md=\"1\">\n                <v-text-field dense suffix=\"元\" v-model=\"total\"\n                label=\"总价\" placeholder=\" \"\n                ></v-text-field>\n              </v-col>\n            </v-row>\n          </div>\n          <v-dialog v-model=\"selectPatientDialog\" persistent max-width=\"600px\">\n            <v-card>\n              <v-card-title>\n                <span class=\"headline\">{{kk}}</span>\n              </v-card-title>\n              <v-card-text>\n                <v-container>\n                  <v-row>\n                  \n                  </v-row>\n                </v-container>\n                <small>*表示选项是必填的</small>\n              </v-card-text>\n              <v-card-actions>\n                <v-spacer></v-spacer>\n                <v-btn color=\"blue darken-1\" text @click=\"cancelDialog\">取消</v-btn>\n                <v-btn color=\"blue darken-1\" text @click=\"saveDialog\">保存</v-btn>\n              </v-card-actions>\n            </v-card>\n          </v-dialog>          \n        </material-card>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script>\n  var pinyin = require(\"pinyin\");\n  var staticHeader=[{sortable: false, text: '名称', value: 'name1', width: '15%'}, {sortable: false,text: '数量', value: 'count1', width: '10%'}, {sortable: false,text: '名称', value: 'name2', width: '15%'}, {sortable: false,text: '数量', value: 'count2', width: '10%'}, \n                 {sortable: false,text: '名称', value: 'name3', width: '15%'}, {sortable: false,text: '数量', value: 'count3', width: '10%'}, {sortable: false,text: '名称', value: 'name4', width: '15%'}, {sortable: false,text: '数量', value: 'count4', width: '10%'}];\n\n  var xiyaoHeader=[{sortable: false,text: '名称', value: 'name1'}, {sortable: false,text: '数量', value: 'count1'}, {sortable: false,text: '用法', value: 'usage1'}];\n\n  export default {\n    data: () => ({\n      direction: 'bottom',\n      fab: false,\n      searchStr: '',\n      transition: 'slide-y-reverse-transition',\n      sexItems: ['男', '女'],\n      patientName: '',\n\t\t\tpatientAge: '',\n      patientSex: '',\n      patientPhone: '',\n      patientSymptom: '',\n      perOrdTotal: 0,\n      perOrdBase: 0,\n      orderComment: '',\n      orderCount: '',\n      total: '',\n      howToUseOn: false,\n      hotToUse: ['一天一次', '一天三次'],\n      medRadio: '草药',\n      cardColor: 'green',\n      components: [],\n      headers: staticHeader,\n      items: [],\n      cacheMedData: [],\n      orderMed1PerObj: [],\n      inputMed: '',\n      inputDose: '',\n      medString: '',\n      selectPatientDialog: false,\n      notzero: v=> v > 0 || '不能是0'\n    }),\n\n    methods: {\n      //搜索\n      filterText (value, search, item) {\n        return value != null &&\n          search != null &&\n          typeof value === 'string' &&\n          value.toString().indexOf(search) !== -1\n      },\n\n      //得到焦点的时候高亮文字\n      focus(event) {\n        event.currentTarget.select();\n\t\t\t},\n\n      // 根据类型获取药品数据\n      getAll: function() {\n        this.loading = true;\n        this.$http.get('/api/getAllMedbyType',{\n          params: {\n            dbs : this.$store.state.user.dbs_prefix+'medlist',\n\t\t\t\t\t\tmedtype : this.medRadio\n\t\t\t\t\t}\n        }).then( (res) => {\n          this.cacheMedData = res.data;\n          this.loading = false;\n        })\n      },\n\n      radioChanged: function(){\n        this.getAll();\n        if(this.medRadio == \"西药\"){\n          this.howToUseOn = true;\n          this.cardColor = 'blue lighten-2';\n          this.headers = xiyaoHeader;\n\t\t\t\t}else{\n          this.howToUseOn = false;\n          this.headers = staticHeader;\n          if(this.medRadio == \"免煎\")\n            this.cardColor = 'lime darken-2';\n          else\n            this.cardColor = 'green';\n\t\t\t\t}\t\t\t\t\t\n      },\n\n      getColor (count) {\n        if (parseInt(count) === 1 && this.medRadio == \"草药\") return 'orange';\n      },\n\n      searchChanged: function(queryText){\n        if(!queryText){\n          //alert(queryText);\n          //this.components = [{\"medname\":\"empty\"}];\n          //return;\n        }\n        else if(queryText.length >= 2){\n          if(this.components.length == 0){\n            this.components = this.cacheMedData;\n          }\n        }else{\n          this.components = [];\n        }\n      },\n\n      customFilter (item, queryText, itemText) {\n        const hasValue = val => val != null ? val : '';\n        const query = hasValue(queryText);\n\n        if(queryText.length < 2) return false;\n        const textOne = item.alias.toString().toLowerCase();\n        return textOne.indexOf(query.toString().toLowerCase()) > -1;\n      },\n\n      moveFocusToDose: function(){\n        let searchStr = this.inputMed;\n        if(searchStr === \"\"){\n          alert(\"不能为空\");\n          return;\n        }\n        \n        //check if already exist in table\n        let existInTable = this.orderMed1PerObj.find(function(p){\n            return p.name === searchStr;\n        });\n        if(typeof(existInTable)!=\"undefined\"){\n            alert(\"不能重复添加药品\");\n            return;\n        }\n        \n\t\t\t\tthis.$refs.mark2.$el.querySelector('input').focus();\n      },\n\n      //medString = [{\"name\":\"xx\",\"count\":\"xx\"},{\"name\":\"xx\",\"count\":\"xx\"}....]\n      disPlayToTb: function(){\n        //this.orderMed1PerObj = JSON.parse(this.medString);\n        this.items = [];\n        let medStringTmepArray = [];\n\t\t\t\tvar emptyStr = \"{\";\n\t\t\t\tvar carry = 4;\n\t\t\t\tif(this.medRadio == \"西药\")\n\t\t\t\t\tcarry = 2;\n\t\t\t\tfor(var i=0; i < this.orderMed1PerObj.length; i++){\n\t\t\t\t\tlet tempStrName = \"name\" + (i%carry+1);\n\t\t\t\t\tlet tempStrNumber = 'count' + (i%carry+1);\n\t\t\t\t\tlet tempStrMedComment = 'medComment' + (i%carry+1);\n\t\t\t\t\tif(this.medRadio == \"草药\")\n\t\t\t\t\t\temptyStr = emptyStr + '\"' + tempStrName + '\":\"' + this.orderMed1PerObj[i].name + '\",\"'  + tempStrNumber + '\":\"' + parseInt(this.orderMed1PerObj[i].count) + this.orderMed1PerObj[i].spec + '\",';\n\t\t\t\t\telse if(this.medRadio == \"免煎\")\n\t\t\t\t\t\temptyStr = emptyStr + '\"' + tempStrName + '\":\"' + this.orderMed1PerObj[i].name + '\",\"'  + tempStrNumber + '\":\"' + this.orderMed1PerObj[i].count + this.orderMed1PerObj[i].spec + '\",';\n\t\t\t\t\telse if(this.medRadio == \"西药\")\n\t\t\t\t\t\temptyStr = emptyStr + '\"' + tempStrName + '\":\"' + this.orderMed1PerObj[i].name + '\",\"'  + tempStrNumber + '\":\"' + parseInt(this.orderMed1PerObj[i].count) + '盒\",\"' + tempStrMedComment + '\":\"' + this.orderMed1PerObj[i].medComment + '\",';\n\t\t\t\t\tif(i>0 && (i+1) % carry == 0){\n\t\t\t\t\t\temptyStr = emptyStr.substr(0,emptyStr.length-1);\n\t\t\t\t\t\temptyStr = emptyStr + '}';\n            let tempObj = JSON.parse(emptyStr);\n            medStringTmepArray.push(emptyStr);\n\t\t\t\t\t\tthis.items.push(tempObj);\n\t\t\t\t\t\temptyStr = \"{\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif( i%carry != 0){\n\t\t\t\t\temptyStr = emptyStr.substr(0,emptyStr.length-1);\n          emptyStr = emptyStr + '}';\n          medStringTmepArray.push(emptyStr);\n\t\t\t\t\tlet tempObj = JSON.parse(emptyStr);\n\t\t\t\t\tthis.items.push(tempObj);\n        }\n        this.medString = medStringTmepArray.join(\";\");\n      },\n\n      postToTb: function(){\n        let searchStr = this.inputMed;\n        if(searchStr === \"\"){\n          alert(\"不能为空\");\n          this.$refs.mark1.$el.querySelector('input').focus();\n          return;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(this.inputDose === \"\" || this.inputDose === \"0\"){\n          alert(\"药品数量不能为空\");\n          this.$refs.mark.$el.querySelector('input').focus();\n          return;\n        }\n\n        let existInDb = this.cacheMedData.find(function(p){\n            return p.medname === searchStr;\n        });\n        \n        //check if already exist in table\n        let existInTable = this.orderMed1PerObj.find(function(p){\n            return p.name === searchStr;\n        });\n        if(typeof(existInTable)!=\"undefined\"){\n            alert(\"不能重复添加药品\");\n            this.$refs.mark1.$el.querySelector('input').focus();\n            return;\n\t\t\t\t}\n        this.orderMed1PerObj.push({\n\t\t\t\t\t\tname: this.inputMed,\n            count: this.inputDose,\n            spec: existInDb.spec,\n            baseprice: existInDb.baseprice,\n\t\t\t\t\t\tsellprice: existInDb.sellprice\n          })\n        this.disPlayToTb();\n        if(this.orderCount === '')\n          this.orderCount = 1;\n        this.inputDose = 1;\n        this.inputMed = '';\n        this.$refs.mark1.$el.querySelector('input').focus();\n      },\n\n      //获取当前时间，格式YYYY-MM-DD\n      getNowFormatDate() {\n\t\t\t\tvar date = new Date();\n\t\t\t\tvar seperator1 = \"/\";\n\t\t\t\tvar year = date.getFullYear();  //年\n\t\t\t\tvar month = date.getMonth() + 1;   //月\n\t\t\t\tvar strDate = date.getDate();   //日\n\t\t\t\tif (month >= 1 && month <= 9) {\n\t\t\t\t\tmonth = \"0\" + month;\n\t\t\t\t}\n\t\t\t\tif (strDate >= 0 && strDate <= 9) {\n\t\t\t\t\tstrDate = \"0\" + strDate;\n\t\t\t\t}\n\t\t\t\tvar currentdate = year + seperator1 + month + seperator1 + strDate;\n\t\t\t\treturn currentdate;\n      },\n\n      postOrdToDbSure:function() {\n        if(this.items.length == 0){\n          alert('订单为空');\n          return;\n        }\n        if(this.patientName == ''){\n          alert('姓名不能为空');\n          return;\n        }\n        this.$http.post('/api/insertPatientOrderPage',{\n              //搜索全拼相同，在得到的结果中找至少有一个字相同的名字,找到了就列出来，没找到就创建一个新的病人\n              dbs : this.$store.state.user.dbs_prefix+'patient',\n              name : this.patientName,\n              name_pinyin : pinyin(this.patientName,{style: pinyin.STYLE_NORMAL}).join(\"\"),\n              sex : this.patientSex,\n              age : !this.patientAge? 0 : parseFloat(this.patientAge),\n              phone : !this.patientPhone? 0 : parseInt(this.patientPhone),\n              lastVisit : this.getNowFormatDate(),\n          }).then( (res) => {\n            this.$http.post('/api/insertOrd',{\n                  dbs : this.$store.state.user.dbs_prefix+'ordlist',\n                  patient : this.patientName,\n                  patient_id : res.data.insertId,\n                  patient_sex : this.patientSex,\n                  patient_age : this.patientAge,\n                  patient_phone : this.patientPhone,\n                  symptom : this.patientSymptom,\n                  order_comment : this.orderComment,\n                  medtype : this.medRadio,\n                  dose : this.orderCount,\n                  medarray : this.medString,\n                  total : parseFloat(this.total),\n                  date : this.getNowFormatDate(),          \n            }).then( (resord) => {\n              \n              this.clearInfo();\n            })\n            .catch( (err) =>{\n              console.log(err);\n            })\n          })\n          .catch( (err) =>{\n            console.log(err);\n          })        \n      },\n\n      clearInfo: function(){\n        this.patientName = '';\n        this.patientSex = '';\n        this.patientAge = '';\n        this.patientPhone = '';\n        this.patientSymptom = '';\n        this.orderComment = '';\n        this.medRadio = '草药';\n        this.orderCount = '';\n        this.items = [];\n        this.total = '';\n        this.perOrdTotal = 0;\n        this.perOrdBase = 0;\n        this.inputDose = '';\n      },\n\n      save: function(count, name){\n        let existInTable = this.orderMed1PerObj.find(function(p){\n            return p.name === name;\n        });\n        var index = this.orderMed1PerObj.indexOf(existInTable);\n        if(!count || !parseInt(count) || parseInt(count) == 0){\n          this.orderMed1PerObj.splice(index, 1);\n          this.disPlayToTb();\n        }else{\n          //splice can activate watch\n          this.orderMed1PerObj.splice(index,1,{\n            name: name,\n            count: parseInt(count),\n            spec: existInTable.spec,\n            baseprice: existInTable.baseprice,\n\t\t\t\t\t\tsellprice: existInTable.sellprice\n          })\n          this.disPlayToTb();\n        }\n      },\n\n      cancel: function(){\n\n      },\n\n      deleteMed(deleteMed) {\n        let existInTable = this.orderMed1PerObj.find(function(p){\n            return p.name === deleteMed;\n        });\n        var index = this.orderMed1PerObj.indexOf(existInTable);\n        this.orderMed1PerObj.splice(index, 1);\n        this.disPlayToTb();\n      },\n\n      nameLostFoucs: function(){\n        if(this.patientName == '')\n          return;\n        let p_name_pinyin = pinyin(this.patientName,{style: pinyin.STYLE_NORMAL}).join(\"\");\n        this.$http.get('/api/findPatientByPinyin',{\n          params: {\n            dbs : this.$store.state.user.dbs_prefix+'patient',\n            name_pinyin : '%' + p_name_pinyin + '%',\n\t\t\t\t\t}\n        }).then( (res) => {\n          alert(JSON.stringify(res.data));\n        })\n        \n        //this.selectPatientDialog = true;\n        //to do \n        //check if the patient exist\n      }\n    },\n\n    watch: {\n      orderMed1PerObj: function(){\n        this.perOrdBase = 0;\n        this.perOrdTotal = 0;\n        if(this.orderMed1PerObj.length === 0)\n          this.orderCount = '';\n        for(let item of this.orderMed1PerObj) {\n          let basePriceOfMed = item.baseprice;\n          let sellPriceOfMed = item.sellprice;\n          let medDose = parseInt(item.count);\n          this.perOrdBase = parseFloat((this.perOrdBase + parseFloat((basePriceOfMed*medDose).toFixed(2))).toFixed(2));\n          this.perOrdTotal = parseFloat((this.perOrdTotal + parseFloat((sellPriceOfMed*medDose).toFixed(2))).toFixed(2));\n          let temp = (this.perOrdTotal * this.orderCount).toFixed(2);\n          this.total = temp;\n        }\n      },\n\n      orderCount: function(val) {\n        if(val != ''){\n          this.orderCount = val;\n        }\n        let temp = (this.perOrdTotal * this.orderCount).toFixed(2);\n        this.total = temp;\n      },\n    },\n\n    mounted: function() {\n\t\t\tthis.getAll();\n    },\n\n    \n  }\n</script>\n"],"sourceRoot":"src/views"}]}